name: QA

on:
  workflow_call:
    inputs:
      head:
        description: 'HEAD to use instead of NX'
        required: true
        type: string
      base:
        description: 'Base to use instead of NX'
        required: true
        type: string

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      NX_BASE: ${{inputs.base}}
      NX_HEAD: ${{inputs.head}}
    steps:
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm_cache
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.npm_cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Nx
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{github.ref_name}}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{github.ref_name}}-
            cache-nx-${{ hashFiles('package-lock.json') }}-
            cache-nx-

      - run: npx nx workspace-lint
      - run: npx nx format:check
      - run: npx nx affected --target=lint
      - run: npx nx affected --target=stylelint

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      NX_BASE: ${{inputs.base}}
      NX_HEAD: ${{inputs.head}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm_cache
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.npm_cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Nx
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{github.ref_name}}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{github.ref_name}}--
            cache-nx-${{ hashFiles('package-lock.json') }}-
            cache-nx-

      - name: Test
        run: npx nx affected --target=test --code-coverage --configuration=ci

      - name: Check coverage
        id: check_coverage
        uses: andstor/file-existence-action@v2
        with:
          files: 'coverage'

      - name: Remove empty lcov files
        if: steps.check_coverage.outputs.files_exists == 'true'
        run: find ./coverage -type f -name "lcov.info" -empty -print -delete

      - name: Publish code coverage
        if: steps.check_coverage.outputs.files_exists == 'true'
        uses: paambaati/codeclimate-action@v4.0.0
        continue-on-error: true
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CODE_CLIMATE_REPORTER_ID}}
        with:
          coverageLocations: |
            coverage/**/lcov.info:lcov

      - uses: codecov/codecov-action@v3

      - name: Upload coverage
        if: steps.check_coverage.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  e2e:
    name: E2E
    # currently disabled
    if: false
    runs-on: ubuntu-latest
    env:
      NX_BASE: ${{inputs.base}}
      NX_HEAD: ${{inputs.head}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm_cache
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache cypress
        uses: actions/cache@v3
        id: cypress_cache
        with:
          path: ~/.cache/Cypress
          key: cache-cypress-${{needs.prepare.outputs.cypress-version}}

      - name: Install Dependencies
        if: |
          steps.npm_cache.outputs.cache-hit != 'true' ||
          steps.cypress_cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Nx
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{github.ref_name}}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{github.ref_name}}-
            cache-nx-${{ hashFiles('package-lock.json') }}-
            cache-nx-

      - run: npx nx affected --target=e2e --configuration=ci
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
